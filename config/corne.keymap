/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define HYP LS(LC(LA(LGUI)))

#define KP_CAPW LGUI(LS(N3))
#define KP_CPYW LGUI(LS(LC(N3))) 
#define KP_CAPP LGUI(LS(N4))
#define KP_CPYP LGUI(LS(LC(N4)))

&lt {
    tapping-term-ms = <150>;
    quick-tap-ms = <150>;
};

/ {
        behaviors {
                gqt: GLOBAL-QUICK-TAP {
                        compatible = "zmk,behavior-hold-tap";
                        label = "GLOBAL_QUICK_TAP";
                        #binding-cells = <2>;
                        flavor = "tap-preferred";
                        tapping-term-ms = <250>;
                        quick-tap-ms = <150>;
                        global-quick-tap;
                        bindings = <&kp>, <&kp>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// | TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  ;  |  !  |
// | E/C |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  |  '  |
// | HYP |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,  |  .  |  /  | ALT |
//               | CMD | SPC | TAB/UPR |   | ENT/LWR | BSPC/SHFT | SHFT |

                        bindings = <
   &kp TILDE       &kp Q &kp W &kp F &kp P &kp B      &kp J &kp L  &kp U     &kp Y   &kp SEMI   &kp EXCL
   &mt LCTRL ESC  &kp A &kp R &kp S &kp T &kp G      &kp M &kp N  &kp E     &kp I   &kp O      &kp SQT
   &kp LSHFT        &kp Z &kp X &kp C &kp D &kp V      &kp K &kp H  &kp COMMA &kp DOT &kp FSLH   &kp LALT
                   &kp HYP &gqt LGUI SPACE &lt 1 TAB      &lt 2 RET &mt LSHFT BSPC &kp HYP
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  %  |  &  |  (  |  )  |  #  |   |  =  |  7  |  8  |  9  |  +  |   \  |
// |  E/C |  $  |  @  |  {  |  }  |  !  |   |  *  |  4  |  5  |  6  |  0  |  "|" |
// |  LSHFT |  _  |  ^  |  [  |  ]  |  `  |   |  /  |  1  |  2  |  3  |  -  |  ALT |
//               | CMD | BSPC | TAB/UPR |   | ENT/LWR | SHFT  | DOT |

                        bindings = <
   &kp TILDE       &kp PRCNT &kp AMPS   &kp LPAR &kp RPAR &kp HASH         &kp EQUAL        &kp N7   &kp N8  &kp N9  &kp PLUS   &kp BSLH
   &mt LCTRL ESC  &kp DLLR  &kp AT     &kp LBRC &kp RBRC &kp EXCL         &kp KP_MULTIPLY  &kp N4   &kp N5  &kp N6  &kp N0     &kp COMMA
   &kp LSHFT        &kp UNDER &kp CARET  &kp LBKT &kp RBKT &kp GRAVE        &kp FSLH         &kp N1   &kp N2  &kp N3  &kp MINUS  &kp PIPE
                                        &kp HYP &gqt LGUI SPACE &kp TAB        &kp RET &mt LSHFT BSPC &kp DOT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |    |    |    |    |    |   |    |    |    |    |    | |
// | ESC  |     |     |     |     |     |   |  LFT  |  DWN  |  UP  |  RGT  |    |     |
// | SHFT |     |     |     |     |     |   |    |    |    |    |  |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |

                        bindings = <
   &kp TAB        &kp KP_CAPP  &kp KP_CPYP  &kp C_BRI_DN   &kp C_BRI_UP  &trans      &trans    &trans    &trans  &trans    &trans  &trans
   &mt LCTRL ESC  &trans  &kp C_MUTE &kp C_VOL_DN   &kp C_VOL_UP  &trans      &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT &trans  &trans
   &kp LSHFT         &trans  &kp C_PP   &kp C_PREV     &kp C_NEXT    &trans      &trans    &trans    &trans  &trans    &trans  &kp LALT
                                            &kp HYP &gqt LGUI SPACE  &kp TAB      &kp RET &mt LSHFT BSPC &kp HYP
                        >;
                };
        };
};
